set -aeuo pipefail

if [ -f src/.env ]
then
    :
else
    printf "\e[31menv file not found ... PLEASE CHECK README FILE BEFORE STARTING"
    exit
fi

source src/.env

#GENERATE DOCKER ENV FILE
./scripts/generate_env.sh


#PERMISSIONS

./scripts/permissions_folders.sh

cd docker
#run docker-compose containers

printf "Installing Containers"

#If --no-cache option passed regenerate all docker containers
if  [[ ${1-} = "--no-cache" ]]; then
    docker-compose -p $APP_NAME build --no-cache php-fpm mysql redis elasticsearch workspace
fi

docker-compose -p $APP_NAME up -d mysql redis elasticsearch workspace

printf "Generating self-signed SSL certificate for local development"
docker exec -ti $APP_NAME"_workspace_1" openssl req -x509 -sha256 -newkey rsa:2048 -keyout certs/local.key -out certs/local.pem -days 1024 -nodes -subj '/CN=localhost'


printf "Installing nginx container"
docker-compose -p $APP_NAME up -d nginx

#install composer packages
printf "Installing composer packages"
docker exec -u laradock -it $APP_NAME"_workspace_1" composer update --prefer-dist

#generate artisan key
printf "Generating Application Key"
docker exec -it $APP_NAME"_workspace_1" php artisan key:generate

printf "Installing npm packages"
docker exec -it $APP_NAME"_workspace_1" npm install
